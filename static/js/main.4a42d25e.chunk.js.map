{"version":3,"sources":["reducers/catalogReducer.ts","assets/Spinner.svg","components/Img/index.tsx","reducers/shoppingCartReducer.ts","components/CatalogItem/index.tsx","components/CatalogPagination/index.tsx","components/Loader/index.tsx","components/Catalog/index.tsx","hooks/useWidth.ts","components/App/index.tsx","components/Layout/index.tsx","components/ShoppingCartItem/index.tsx","components/ShoppingCart/index.tsx","serviceWorker.ts","reducers/index.ts","configureStore.ts","index.tsx"],"names":["CatalogStatus","useStyles","makeStyles","theme","createStyles","root","position","overflow","spinner","top","left","height","width","image","animation","name","Img","aspectRatio","className","wrapperClassName","isCritical","alt","imgAttributes","useState","loaded","setLoaded","classes","imgClassName","imgWrapperClassName","placeholderStyle","paddingTop","style","src","Spinner","onLoad","ShoppingCartStatus","initialState","items","currentPage","itemsPerPage","status","Initial","error","getCatalog","state","catalogReducer","getCatalogItems","createSelector","getCurrentPage","getItemsPerPage","getItemsCount","length","getPageCount","count","Math","ceil","getCurrentPageFirstItem","getCurrentPageLastItem","itemsCount","min","getPaginationText","firstItem","lastItem","getStatus","getPaginatedItems","slice","CatalogThunks","catalogUrl","dispatch","a","async","CatalogActions","loadCatalog","fetch","response","json","loadCatalogSuccess","loadCatalogFailure","message","createAction","firstPage","previousPage","goToPage","nextPage","lastPage","setItemsPerPage","createReducer","builder","addCase","Loading","action","payload","Loaded","Error","getShoppingCart","shoppingCartReducer","getShoppingCartCatalogItemIds","catalogItemIds","getShoppingCartQuantityMap","quantityMap","getShoppingCartCatalogItems","catalogItems","map","catalogItemId","find","item","id","ShoppingCartActions","addItem","remove","updateItemQuantity","includes","unshift","index","findIndex","quantity","display","flexDirection","clickableArea","flex","justifyContent","alignItems","title","typography","h5","margin","actions","addToCartBtn","padding","spacing","addToCartBtnIcon","borderColor","palette","primary","contrastText","borderRadius","borderStyle","borderWidth","addToCartBtnLabel","CatalogItem","useDispatch","Card","CardActionArea","CardMedia","url","CardContent","CardActions","Button","variant","color","onClick","breakpoints","down","info","text","select","marginLeft","marginRight","CatalogPagination","useSelector","pageCount","paginationText","InputLabel","Select","native","labelId","value","onChange","event","target","IconButton","disabled","aria-label","Loader","wrapper","gridTemplateColumns","gridGap","marginTop","loader","Catalog","paginatedItems","catalogStatus","useEffect","key","useWidth","Routes","useTheme","keys","reverse","reduce","output","matches","useMediaQuery","up","bottomNavigation","bottom","Layout","children","history","useHistory","match","useRouteMatch","CART","CATALOG","path","page","setPage","push","BottomNavigation","_","newPage","BottomNavigationAction","icon","thumbnail","thumbnailWrapper","minWidth","paddingLeft","paddingRight","ShoppingCartItem","thumbnailUrl","TextField","label","type","valueAsNumber","inputProps","React","memo","shoppingCartItems","App","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","rootReducer","combineReducers","preloadedState","createMuiTheme","main","teal","secondary","deepOrange","store","configureStore","reducer","middleware","getDefaultMiddleware","enhancers","ReactDOM","render","ThemeProvider","basename","CssBaseline","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"yIAKYA,E,4NCLG,MAA0B,oCCMnCC,EAAYC,aACd,SAACC,GAAD,OACIC,YAAa,CACTC,KAAM,CACFC,SAAU,WACVC,SAAU,UAEdC,QAAS,CACLF,SAAU,WACVG,IAAK,MACLC,KAAM,MACNC,OAAQ,MACRC,MAAO,OAEXC,MAAO,CACHP,SAAU,WACVG,IAAK,EACLC,KAAM,EACNE,MAAO,OACP,YAAa,CACTE,UAAW,6BAI3B,CAAEC,KAAM,QA8BGC,EArBc,SAAC,GAA0F,IAAxFC,EAAuF,EAAvFA,YAAaC,EAA0E,EAA1EA,UAAWC,EAA+D,EAA/DA,iBAAkBC,EAA6C,EAA7CA,WAA6C,IAAjCC,WAAiC,MAA3B,GAA2B,EAApBC,EAAoB,mFACvFC,oBAAS,GAD8E,mBAC5GC,EAD4G,KACpGC,EADoG,KAE7GC,EAAUzB,IAMhB,IAAM0B,EAAY,UAAMD,EAAQb,MAAd,YAAuBK,GAAa,GAApC,YAA2CE,EAAyB,GAAZ,WACpEQ,EAAmB,UAAMF,EAAQrB,KAAd,YAAsBc,GAAoB,IAC7DU,EAAmB,CAAEC,WAAW,GAAD,OAAmB,IAAdb,EAAL,MAErC,OACI,yBAAKC,UAAWU,GACZ,yBAAKG,MAAOF,KACVL,IAAWJ,GAAc,yBAAKF,UAAWQ,EAAQlB,QAASwB,IAAKC,EAASZ,IAAI,YAC9E,uCAAKH,UAAWS,EAAcN,IAAKA,EAAKa,OAZhD,WACIT,GAAU,KAWsDH,M,mDFlD5DtB,K,kBAAAA,E,kBAAAA,E,gBAAAA,E,eAAAA,M,KAuBZ,IGtBYmC,EHsBNC,EAAyB,CAC3BC,MAAO,GACPC,YAAa,EACbC,aAAc,GACdC,OAAQxC,EAAcyC,QACtBC,MAAO,MAGEC,EAAa,SAACC,GAAD,OAAsBA,EAAMC,gBACzCC,EAAkBC,YAAeJ,GAAY,SAAAC,GAAK,OAAIA,EAAMP,SAC5DW,EAAiBD,YAAeJ,GAAY,SAAAC,GAAK,OAAIA,EAAMN,eAC3DW,EAAkBF,YAAeJ,GAAY,SAAAC,GAAK,OAAIA,EAAML,gBAC5DW,EAAgBH,YAAeD,GAAiB,SAAAT,GAAK,OAAIA,EAAMc,UAC/DC,EAAeL,YAAe,CAACG,EAAeD,IAAkB,SAACI,EAAOd,GAAR,OAAyBe,KAAKC,KAAKF,EAAQd,MAC3GiB,EAA0BT,YACnC,CAACC,EAAgBC,IACjB,SAACX,EAAaC,GAAd,OAAgCD,EAAc,GAAKC,EAAe,KAEzDkB,EAAyBV,YAClC,CAACC,EAAgBC,EAAiBC,IAClC,SAACZ,EAAaC,EAAcmB,GAA5B,OAA2CJ,KAAKK,IAAIrB,EAAcC,EAAcmB,MAEvEE,EAAoBb,YAC7B,CAACS,EAAyBC,EAAwBP,IAClD,SAACW,EAAWC,EAAUJ,GAAtB,gBAAwCG,EAAxC,iBAA0DC,EAA1D,qBAAmFJ,MAE1EK,EAAYhB,YAAeJ,GAAY,SAAAC,GAAK,OAAIA,EAAMJ,UACtDwB,EAAoBjB,YAAe,CAACD,EAAiBE,EAAgBC,IAAkB,SAACZ,EAAOC,EAAaC,GAArB,OAChGF,EAAM4B,OAAO3B,EAAc,GAAKC,EAAcD,EAAcC,MAGnD2B,EACH,SAASC,GACX,OAAO,SAAMC,GAAN,iBAAAC,EAAAC,OAAA,uDACHF,EAASG,EAAeC,eADrB,oBAAAH,EAAA,MAGwBI,MAAMN,IAH9B,cAGOO,EAHP,kBAAAL,EAAA,MAIqCK,EAASC,QAJ9C,OAIOtC,EAJP,OAKC+B,EAASG,EAAeK,mBAAmBvC,IAL5C,kDAOC+B,EAASG,EAAeM,mBAAmB,KAAMC,UAPlD,2DAaFP,EAAiB,CAC1BC,YAAaO,YAAa,sCAC1BH,mBAAoBG,YAA6B,+BACjDF,mBAAoBE,YAAqB,4BACzCC,UAAWD,YAAa,wBACxBE,aAAcF,YAAa,2BAC3BG,SAAUH,YAAqB,wBAC/BI,SAAUJ,YAAa,uBACvBK,SAAUL,YAAa,uBACvBM,gBAAiBN,YAAqB,iCA6C3BlC,EA1CQyC,YAAwBlD,GAAc,SAAAmD,GAAO,OAChEA,EACKC,QAAQjB,EAAeC,aAAa,SAAA5B,GAAK,sBACnCA,EADmC,CAEtCJ,OAAQxC,EAAcyF,aAEzBD,QAAQjB,EAAeK,oBAAoB,SAAChC,EAAO8C,GAAR,sBACrC9C,EADqC,CAExCP,MAAM,GAAD,mBAAMO,EAAMP,OAAZ,YAAsBqD,EAAOC,UAClCnD,OAAQxC,EAAc4F,YAEzBJ,QAAQjB,EAAeM,oBAAoB,SAACjC,EAAO8C,GAAR,sBACrC9C,EADqC,CAExCF,MAAOgD,EAAOC,QACdnD,OAAQxC,EAAc6F,WAEzBL,QAAQjB,EAAeS,WAAW,SAAApC,GAAK,sBACjCA,EADiC,CAEpCN,YAAa,OAEhBkD,QAAQjB,EAAeU,cAAc,SAAArC,GAAK,sBACpCA,EADoC,CAEvCN,aAAcM,EAAMN,YAAc,GAAKM,EAAML,aAAe,EAAIK,EAAMN,YAAc,EAAIM,EAAMN,iBAEjGkD,QAAQjB,EAAeW,UAAU,SAACtC,EAAO8C,GAAR,sBAC3B9C,EAD2B,CAE9BN,YAAaoD,EAAOC,aAEvBH,QAAQjB,EAAeY,UAAU,SAAAvC,GAAK,sBAChCA,EADgC,CAEnCN,aAAcM,EAAMN,YAAc,GAAKM,EAAML,aAAeK,EAAMP,MAAMc,OAASP,EAAMN,YAAc,EAAIM,EAAMN,iBAElHkD,QAAQjB,EAAea,UAAU,SAAAxC,GAAK,sBAChCA,EADgC,CAEnCN,YAAagB,KAAKC,KAAKX,EAAMP,MAAMc,OAASP,EAAML,mBAErDiD,QAAQjB,EAAec,iBAAiB,SAACzC,EAAO8C,GAAR,sBAClC9C,EADkC,CAErCL,aAAcmD,EAAOC,iB,SGtHrBxD,K,kBAAAA,E,kBAAAA,E,gBAAAA,E,eAAAA,M,KAYZ,IAKa2D,GAAkB,SAAClD,GAAD,OAAsBA,EAAMmD,qBAC9CC,GAAgCjD,YAAe+C,IAAiB,SAAAlD,GAAK,OAAIA,EAAMqD,kBAC/EC,GAA6BnD,YAAe+C,IAAiB,SAAAlD,GAAK,OAAIA,EAAMuD,eAC5EC,GAA8BrD,YACvC,CAACiD,GAA+BlD,IAChC,SAACmD,EAAgBI,GAAjB,OAAkCJ,EAAeK,KAAI,SAAAC,GAAa,OAAIF,EAAaG,MAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAOH,WAGnGI,GAAsB,CAC/BC,QAAS7B,YAAqB,2BAC9B8B,OAAQ9B,YAAqB,8BAC7B+B,mBAAoB/B,YAA+C,wCA0BxDgB,GAvBaT,YAnBQ,CAChCW,eAAgB,GAChBE,YAAa,KAiBsD,SAAAZ,GAAO,OAC1EA,EACKC,QAAQmB,GAAoBC,SAAS,SAAChE,EAAO8C,GAAY,IAC9CO,EAAgCrD,EAAhCqD,eAAgBE,EAAgBvD,EAAhBuD,YACpBF,EAAec,SAASrB,EAAOC,SAC/BQ,EAAYT,EAAOC,SAAWQ,EAAYT,EAAOC,SAAW,GAE5DM,EAAee,QAAQtB,EAAOC,SAC9BQ,EAAYT,EAAOC,SAAW,MAGrCH,QAAQmB,GAAoBE,QAAQ,SAACjE,EAAO8C,GAAY,IAC7CO,EAAgCrD,EAAhCqD,eAAgBE,EAAgBvD,EAAhBuD,YAClBc,EAAQhB,EAAeiB,WAAU,SAAAX,GAAa,OAAIA,IAAkBb,EAAOC,kBAC1EM,EAAegB,UACfd,EAAYT,EAAOC,YAE7BH,QAAQmB,GAAoBG,oBAAoB,SAAClE,EAAO8C,GAAY,IAAD,EACvCA,EAAOC,QAAxBe,EADwD,EACxDA,GAAIS,EADoD,EACpDA,SACZvE,EAAMuD,YAAYO,GAAMS,QCvC9BlH,GAAYC,aACd,SAACC,GAAD,OACIC,YAAa,CACTC,KAAM,CACF+G,QAAS,OACTC,cAAe,SACf/G,SAAU,YAEdgH,cAAe,CACXC,KAAM,WACNH,QAAS,OACTC,cAAe,SACfG,eAAgB,aAChBC,WAAY,SAEhBC,MAAM,eAAMvH,EAAMwH,WAAWC,GAAxB,CAA4BC,OAAQ,IACzCC,QAAS,CACLV,QAAS,QAEbW,aAAc,CACVX,QAAS,OACTG,KAAM,WACNS,QAAS7H,EAAM8H,QAAQ,IAE3BC,iBAAkB,CACdC,YAAahI,EAAMiI,QAAQC,QAAQC,aACnCC,aAAc,EACdC,YAAa,QACbC,YAAa,EACbT,QAAS,GAEbU,kBAAmB,CACfb,OAAQ,cAGpB,CAAE9G,KAAM,gBAmCG4H,GA5BsB,SAAC,GAAc,IAAZlC,EAAW,EAAXA,KAC9BrC,EAAWwE,cACXlH,EAAUzB,KAMhB,OACI,kBAAC4I,EAAA,EAAD,CAAM3H,UAAWQ,EAAQrB,MACrB,kBAACyI,EAAA,EAAD,CAAgB5H,UAAWQ,EAAQ4F,eAC/B,kBAACyB,EAAA,EAAD,KACI,kBAAC,EAAD,CAAK/G,IAAKyE,EAAKuC,IAAK/H,YAAa,KAErC,kBAACgI,EAAA,EAAD,KACI,wBAAI/H,UAAWQ,EAAQgG,OAAQjB,EAAKiB,SAG5C,kBAACwB,EAAA,EAAD,CAAahI,UAAWQ,EAAQoG,SAC5B,kBAACqB,EAAA,EAAD,CAAQjI,UAAWQ,EAAQqG,aAAcqB,QAAQ,YAAYC,MAAM,UAAUC,QAfzF,WACIlF,EAASuC,GAAoBC,QAAQH,EAAKC,OAe9B,kBAAC,IAAD,CAAqBxF,UAAWQ,EAAQwG,mBACxC,0BAAMhH,UAAWQ,EAAQgH,mBAAzB,mB,8GChEdzI,GAAYC,aACd,SAACC,GAAD,OACIC,YAAa,CACTC,KAAK,aACD+G,QAAS,OACTC,cAAe,MACfG,eAAgB,WAChBQ,QAAS7H,EAAM8H,QAAQ,IACtB9H,EAAMoJ,YAAYC,KAAK,MAAQ,CAC5BnC,cAAe,WAGvBoC,KAAM,CACFrC,QAAS,OACTC,cAAe,OAEnBqC,KAAM,CACFtC,QAAS,OACTK,WAAY,UAEhBkC,OAAQ,CACJC,WAAYzJ,EAAM8H,QAAQ,GAC1B4B,YAAa1J,EAAM8H,QAAQ,IAE/BH,QAAQ,aACJV,QAAS,OACTC,cAAe,OACdlH,EAAMoJ,YAAYC,KAAK,MAAQ,CAC5BI,WAAY,aAI5B,CAAE7I,KAAM,sBA0EG+I,GArE4B,WACvC,IAAM1F,EAAWwE,cACXtG,EAAcyH,YAAY/G,GAC1BT,EAAewH,YAAY9G,GAC3B+G,EAAYD,YAAY3G,GACxB6G,EAAiBF,YAAYnG,GAC7BlC,EAAUzB,KA0BhB,OACI,yBAAKiB,UAAWQ,EAAQrB,MACpB,yBAAKa,UAAWQ,EAAQ+H,MACpB,kBAACS,GAAA,EAAD,CAAYhJ,UAAWQ,EAAQgI,KAAMhD,GAAG,mCAAxC,kBAGA,kBAACyD,GAAA,EAAD,CACIjJ,UAAWQ,EAAQiI,OACnBS,QAAM,EACNC,QAAQ,kCACRC,MAAO/H,EACPgI,SAnChB,SAAyBC,GACrB,IAAMjI,EAAeiI,EAAMC,OAAOH,MAC9B/H,EAAe,IACf6B,EAASG,EAAec,gBAAgB9C,IACxC6B,EAASG,EAAeS,gBAiChB,4BAAQsF,MAAO,GAAf,KACA,4BAAQA,MAAO,IAAf,MACA,4BAAQA,MAAO,IAAf,OAEJ,yBAAKpJ,UAAWQ,EAAQgI,MAAOO,IAEnC,yBAAK/I,UAAWQ,EAAQoG,SACpB,kBAAC4C,GAAA,EAAD,CAAYpB,QApCxB,WACIlF,EAASG,EAAeS,cAmCoB2F,SAAUrI,GAAe,EAAGsI,aAAW,cACvE,kBAAC,KAAD,OAEJ,kBAACF,GAAA,EAAD,CAAYpB,QAnCxB,WACIlF,EAASG,EAAeU,iBAkCuB0F,SAAUrI,GAAe,EAAGsI,aAAW,iBAC1E,kBAAC,KAAD,OAEJ,kBAACF,GAAA,EAAD,CAAYpB,QAlCxB,WACIlF,EAASG,EAAeY,aAiCmBwF,SAAUrI,GAAe0H,EAAY,EAAGY,aAAW,aAClF,kBAAC,KAAD,OAEJ,kBAACF,GAAA,EAAD,CAAYpB,QAjCxB,WACIlF,EAASG,EAAea,aAgCmBuF,SAAUrI,GAAe0H,EAAY,EAAGY,aAAW,aAClF,kBAAC,KAAD,UCzGLC,GAFiB,SAAC,GAAD,IAAG3J,EAAH,EAAGA,UAAH,OAAmB,yBAAKA,UAAWA,GAAa,GAAIc,IAAKC,EAASZ,IAAI,gBCShGpB,GAAYC,aACd,SAACC,GAAD,OACIC,YAAa,CACTC,KAAM,CACF+G,QAAS,OACTC,cAAe,UAEnByD,QAAQ,aACJ9C,QAAS7H,EAAM8H,QAAQ,GACvBb,QAAS,OACT2D,oBAAqB,wCACrBC,QAAS7K,EAAM8H,QAAQ,IACtB9H,EAAMoJ,YAAYC,KAAK,MAAQ,CAC5BpC,QAAS,OACTC,cAAe,SACf,YAAa,CACT4D,UAAW9K,EAAM8H,QAAQ,MAIrCiD,OAAQ,CACJrD,OAAQ,YAGpB,CAAE9G,KAAM,YAgCGoK,GA7BkB,SAAC,GAAoB,IAAlBhH,EAAiB,EAAjBA,WAC1BC,EAAWwE,cACXwC,EAAiBrB,YAAY/F,GAC7BqH,EAAgBtB,YAAYhG,GAC5BrC,EAAUzB,KAQhB,OANAqL,qBAAU,WACFD,IAAkBrL,EAAcyF,SAAW4F,IAAkBrL,EAAc4F,QAC3ExB,EAASF,EAAmBC,MAEjC,CAACC,EAAUD,EAAYkH,IAEtBA,IAAkBrL,EAAc4F,OACzB,kBAAC,GAAD,CAAQ1E,UAAWQ,EAAQwJ,SAIlC,yBAAKhK,UAAWQ,EAAQrB,MACpB,kBAAC,GAAD,MACA,yBAAKa,UAAWQ,EAAQoJ,SACnBM,EAAe9E,KAAI,SAAAG,GAAI,OACpB,kBAAC,GAAD,CAAa8E,IAAG,sBAAiB9E,EAAKC,IAAMD,KAAMA,QAG1D,kBAAC,GAAD,Q,+ECpDG+E,ICTHC,GDSGD,GAZf,WACI,IAAMrL,EAAQuL,eAEd,OADa,YAAIvL,EAAMoJ,YAAYoC,MAAMC,UAEhCC,QAAO,SAACC,EAA2BP,GAEpC,IAAMQ,EAAUC,aAAc7L,EAAMoJ,YAAY0C,GAAGV,IACnD,OAAQO,GAAUC,EAAUR,EAAMO,IACnC,OAAS,MECd7L,GAAYC,aACd,SAACC,GAAD,OACIC,YAAa,CACTC,KAAM,CACF+G,QAAS,OACTC,cAAe,SACf1G,OAAQ,OACRJ,SAAU,QAEd2L,iBAAkB,CACd5L,SAAU,WACV6L,OAAQ,EACRvL,MAAO,YAGnB,CAAEG,KAAM,WAiCGqL,GA5BiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzBzL,EAAQ4K,KACR9J,EAAUzB,KACVqM,EAAUC,cACVC,EAAQC,YAAc,CAAChB,GAAOiB,KAAMjB,GAAOkB,UAJH,EAKtBpL,mBAASiL,EAAQA,EAAMI,KAAOnB,GAAOkB,SALf,mBAKvCE,EALuC,KAKjCC,EALiC,KAe9C,OARAxB,qBAAU,WACNgB,EAAQS,KAAKF,KACd,CAACA,EAAMP,IAON,0BAAMpL,UAAWQ,EAAQrB,MACpBgM,EACU,OAAVzL,GACG,kBAACoM,GAAA,EAAD,CAAkB9L,UAAWQ,EAAQwK,iBAAkB5B,MAAOuC,EAAMtC,SARhF,SAAkB0C,EAA0BC,GACxCJ,EAAQI,KAQI,kBAACC,GAAA,EAAD,CAAwB7C,MAAOmB,GAAOkB,QAASS,KAAM,kBAAC,KAAD,QACrD,kBAACD,GAAA,EAAD,CAAwB7C,MAAOmB,GAAOiB,KAAMU,KAAM,kBAAC,KAAD,W,8BCxChEnN,GAAYC,aACd,SAACC,GAAD,OACIC,YAAa,CACTC,KAAM,CACF+G,QAAS,OACTC,cAAe,MACfI,WAAY,aACZO,QAAS7H,EAAM8H,QAAQ,IAE3BoF,UAAW,CACP9E,aAAc,OAElB+E,iBAAkB,CACdC,SAAU,IAEd7F,MAAO,CACHN,QAAS,cACTK,WAAY,SACZ+F,YAAarN,EAAM8H,QAAQ,GAC3BwF,aAActN,EAAM8H,QAAQ,GAC5B4B,YAAa,YAGzB,CAAE9I,KAAM,qBAuCG2M,GA/B2B,SAAC,GAAwB,IAAtBjH,EAAqB,EAArBA,KAAMU,EAAe,EAAfA,SACzC/C,EAAWwE,cACXlH,EAAUzB,KAUhB,OACI,kBAAC4I,EAAA,EAAD,CAAM3H,UAAWQ,EAAQrB,MACrB,kBAAC,EAAD,CACI2B,IAAKyE,EAAKkH,aACVtM,IAAKoF,EAAKiB,MACVzG,YAAa,EACbG,YAAY,EACZF,UAAWQ,EAAQ2L,UACnBlM,iBAAkBO,EAAQ4L,mBAE9B,0BAAMpM,UAAWQ,EAAQgG,OAAQjB,EAAKiB,OACtC,kBAACkG,GAAA,EAAD,CAAWC,MAAM,WAAW9M,KAAK,WAAW+M,KAAK,SAASxD,MAAOnD,EAAUoD,SAfnF,SAAwBC,GACpBpG,EAASuC,GAAoBG,mBAAmB,CAAEJ,GAAID,EAAKC,GAAIS,SAAUqD,EAAMC,OAAOsD,kBAcmBC,WAAY,CAAErK,IAAK,KACxH,kBAAC+G,GAAA,EAAD,CAAYrB,MAAM,UAAUC,QApBpC,WACIlF,EAASuC,GAAoBE,OAAOJ,EAAKC,OAoBjC,kBAAC,KAAD,SC3DVzG,GAAYC,aACd,SAACC,GAAD,OACIC,YAAa,CACTC,KAAM,CACF+G,QAAS,OACTC,cAAe,SACfW,QAAS7H,EAAM8H,QAAQ,GACvBrH,MAAO,OACP,YAAa,CACTqK,UAAW9K,EAAM8H,QAAQ,SAIzC,CAAElH,KAAM,iBAmBGkN,OAAMC,MAdiB,WAClC,IAAMC,EAAoBpE,YAAY3D,IAChCD,EAAc4D,YAAY7D,IAC1BxE,EAAUzB,KAEhB,OACI,yBAAKiB,UAAWQ,EAAQrB,MACnB8N,EAAkB7H,KAAI,SAAAG,GAAI,OACvB,kBAAC,GAAD,CAAkB8E,IAAG,2BAAsB9E,EAAKC,IAAMD,KAAMA,EAAMU,SAAUhB,EAAYM,EAAKC,c,SH9BjG+E,K,YAAAA,E,cAAAA,Q,KAKZ,IAWe2C,GAXO,WAClB,OACI,kBAAC,GAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOxB,KAAMnB,GAAOiB,KAAM2B,UAAW,kBAAM,kBAAC,GAAD,SAC3C,kBAAC,IAAD,CAAOzB,KAAMnB,GAAOkB,QAAS0B,UAAW,kBAAM,kBAAC,GAAD,CAASlK,WAAW,sDIL5EmK,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlC,MACvB,2DA8CN,SAASmC,GAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxM,QACfkM,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAlN,GACL8M,QAAQ9M,MAAM,4CAA6CA,M,aCzFlDmN,GALKC,2BAAgB,CAChCjN,iBACAkD,yB,WCRsCgK,GCapC5P,GAAQ6P,YAAe,CACzB5H,QAAS,CACL0F,KAAM,QACNzF,QAAS,CACL4H,KAAMC,IAAK,MAEfC,UAAW,CACPF,KAAMG,IAAW,SAKvBC,GDxBYC,YAAe,CACzBC,QAASV,GACTW,WAAW,YAAKC,eAChBV,kBACAW,UAAW,KCsBnBC,IAASC,OACL,kBAAC,IAAD,CAAUP,MAAOA,IACb,kBAACQ,EAAA,EAAD,CAAe1Q,MAAOA,IAClB,kBAAC,IAAD,CAAe2Q,SAAkD,cAC7D,kBAACC,EAAA,EAAD,MACA,kBAAC,GAAD,SAIZC,SAASC,eAAe,SHbrB,SAAkBpC,GACvB,GAA6C,kBAAmBC,UAAW,CAMzE,GAJkB,IAAIoC,IACpBC,aACA3C,OAAOC,SAAS2C,MAEJC,SAAW7C,OAAOC,SAAS4C,OAIvC,OAGF7C,OAAO8C,iBAAiB,QAAQ,WAC9B,IAAM1C,EAAK,UAAMuC,aAAN,sBAEP7C,KAgEV,SAAiCM,EAAeC,GAE9CpK,MAAMmK,EAAO,CACX2C,QAAS,CAAE,iBAAkB,YAE5BtC,MAAK,SAAAvK,GAEJ,IAAM8M,EAAc9M,EAAS6M,QAAQE,IAAI,gBAEnB,MAApB/M,EAASlC,QACO,MAAfgP,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C5C,UAAUC,cAAc4C,MAAM1C,MAAK,SAAAC,GACjCA,EAAa0C,aAAa3C,MAAK,WAC7BT,OAAOC,SAASoD,eAKpBlD,GAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEAvFAqC,CAAwBlD,EAAOC,GAI/BC,UAAUC,cAAc4C,MAAM1C,MAAK,WACjCO,QAAQC,IACN,iHAMJd,GAAgBC,EAAOC,OGZ/BE,I","file":"static/js/main.4a42d25e.chunk.js","sourcesContent":["import { Action, createAction, createReducer, createSelector } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \"reducers\";\nimport { ThunkAction } from \"redux-thunk\";\n\nexport enum CatalogStatus {\n    Initial = \"INITIAL\",\n    Loading = \"LOADING\",\n    Loaded = \"LOADED\",\n    Error = \"ERROR\",\n}\n\nexport type ICatalogItem = {\n    id: number;\n    albumId: number;\n    title: string;\n    url: string;\n    thumbnailUrl: string;\n};\n\nexport type ICatalog = {\n    items: ICatalogItem[];\n    currentPage: number;\n    itemsPerPage: number;\n    status: CatalogStatus;\n    error: string | null;\n};\n\nconst initialState: ICatalog = {\n    items: [],\n    currentPage: 1,\n    itemsPerPage: 15,\n    status: CatalogStatus.Initial,\n    error: null,\n};\n\nexport const getCatalog = (state: RootState) => state.catalogReducer;\nexport const getCatalogItems = createSelector(getCatalog, state => state.items);\nexport const getCurrentPage = createSelector(getCatalog, state => state.currentPage);\nexport const getItemsPerPage = createSelector(getCatalog, state => state.itemsPerPage);\nexport const getItemsCount = createSelector(getCatalogItems, items => items.length);\nexport const getPageCount = createSelector([getItemsCount, getItemsPerPage], (count, itemsPerPage) => Math.ceil(count / itemsPerPage));\nexport const getCurrentPageFirstItem = createSelector(\n    [getCurrentPage, getItemsPerPage],\n    (currentPage, itemsPerPage) => (currentPage - 1) * itemsPerPage + 1\n);\nexport const getCurrentPageLastItem = createSelector(\n    [getCurrentPage, getItemsPerPage, getItemsCount],\n    (currentPage, itemsPerPage, itemsCount) => Math.min(currentPage * itemsPerPage, itemsCount)\n);\nexport const getPaginationText = createSelector(\n    [getCurrentPageFirstItem, getCurrentPageLastItem, getItemsCount],\n    (firstItem, lastItem, itemsCount) => `${firstItem}\\u2011${lastItem}\\u00A0of\\u00A0${itemsCount}`\n);\nexport const getStatus = createSelector(getCatalog, state => state.status);\nexport const getPaginatedItems = createSelector([getCatalogItems, getCurrentPage, getItemsPerPage], (items, currentPage, itemsPerPage) =>\n    items.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage)\n);\n\nexport const CatalogThunks = {\n    load: function(catalogUrl: string): ThunkAction<void, RootState, null, Action<string>> {\n        return async dispatch => {\n            dispatch(CatalogActions.loadCatalog());\n            try {\n                const response = await fetch(catalogUrl);\n                const items: ICatalogItem[] = await response.json();\n                dispatch(CatalogActions.loadCatalogSuccess(items));\n            } catch (error) {\n                dispatch(CatalogActions.loadCatalogFailure(error.message));\n            }\n        };\n    },\n};\n\nexport const CatalogActions = {\n    loadCatalog: createAction(\"[Catalog] Start loading catalog...\"),\n    loadCatalogSuccess: createAction<ICatalogItem[]>(\"[Catalog] Succeeded loading\"),\n    loadCatalogFailure: createAction<string>(\"[Catalog] Failed loading\"),\n    firstPage: createAction(\"[Catalog] First page\"),\n    previousPage: createAction(\"[Catalog] Previous page\"),\n    goToPage: createAction<number>(\"[Catalog] Go to page\"),\n    nextPage: createAction(\"[Catalog] Next page\"),\n    lastPage: createAction(\"[Catalog] Last page\"),\n    setItemsPerPage: createAction<number>(\"[Catalog] Set items per page\"),\n};\n\nconst catalogReducer = createReducer<ICatalog>(initialState, builder =>\n    builder\n        .addCase(CatalogActions.loadCatalog, state => ({\n            ...state,\n            status: CatalogStatus.Loading,\n        }))\n        .addCase(CatalogActions.loadCatalogSuccess, (state, action) => ({\n            ...state,\n            items: [...state.items, ...action.payload],\n            status: CatalogStatus.Loaded,\n        }))\n        .addCase(CatalogActions.loadCatalogFailure, (state, action) => ({\n            ...state,\n            error: action.payload,\n            status: CatalogStatus.Error,\n        }))\n        .addCase(CatalogActions.firstPage, state => ({\n            ...state,\n            currentPage: 1,\n        }))\n        .addCase(CatalogActions.previousPage, state => ({\n            ...state,\n            currentPage: (state.currentPage - 1) * state.itemsPerPage > 0 ? state.currentPage - 1 : state.currentPage,\n        }))\n        .addCase(CatalogActions.goToPage, (state, action) => ({\n            ...state,\n            currentPage: action.payload,\n        }))\n        .addCase(CatalogActions.nextPage, state => ({\n            ...state,\n            currentPage: (state.currentPage + 1) * state.itemsPerPage < state.items.length ? state.currentPage + 1 : state.currentPage,\n        }))\n        .addCase(CatalogActions.lastPage, state => ({\n            ...state,\n            currentPage: Math.ceil(state.items.length / state.itemsPerPage),\n        }))\n        .addCase(CatalogActions.setItemsPerPage, (state, action) => ({\n            ...state,\n            itemsPerPage: action.payload,\n        }))\n);\n\nexport default catalogReducer;\n","export default __webpack_public_path__ + \"static/media/Spinner.f3fb0c41.svg\";","import React, { ImgHTMLAttributes, useState } from \"react\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport Spinner from \"assets/Spinner.svg\";\n\nconst useStyles = makeStyles(\n    (theme: Theme) =>\n        createStyles({\n            root: {\n                position: \"relative\",\n                overflow: \"hidden\",\n            },\n            spinner: {\n                position: \"absolute\",\n                top: \"25%\",\n                left: \"25%\",\n                height: \"50%\",\n                width: \"50%\",\n            },\n            image: {\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                width: \"100%\",\n                \"&.fade-in\": {\n                    animation: \"fade-in 0.5s ease-in\",\n                },\n            },\n        }),\n    { name: \"Img\" }\n);\n\ntype Props = ImgHTMLAttributes<HTMLImageElement> & {\n    isCritical?: boolean;\n    aspectRatio: number;\n    wrapperClassName?: string;\n};\n\nconst Img: React.FC<Props> = ({ aspectRatio, className, wrapperClassName, isCritical, alt = \"\", ...imgAttributes }) => {\n    const [loaded, setLoaded] = useState(false);\n    const classes = useStyles();\n\n    function onLoad() {\n        setLoaded(true);\n    }\n\n    const imgClassName = `${classes.image} ${className || \"\"} ${!isCritical ? \"fade-in\" : \"\"}`;\n    const imgWrapperClassName = `${classes.root} ${wrapperClassName || \"\"}`;\n    const placeholderStyle = { paddingTop: `${aspectRatio * 100}%` };\n\n    return (\n        <div className={imgWrapperClassName}>\n            <div style={placeholderStyle} />\n            {!loaded && !isCritical && <img className={classes.spinner} src={Spinner} alt=\"spinner\" />}\n            <img className={imgClassName} alt={alt} onLoad={onLoad} {...imgAttributes} />\n        </div>\n    );\n};\n\nexport default Img;\n","import { createAction, createReducer, createSelector } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \"reducers\";\n\nimport { getCatalogItems } from \"./catalogReducer\";\n\nexport enum ShoppingCartStatus {\n    Initial = \"INITIAL\",\n    Loading = \"LOADING\",\n    Loaded = \"LOADED\",\n    Error = \"ERROR\",\n}\n\nexport type IShoppingCart = {\n    catalogItemIds: number[];\n    quantityMap: { [id: number]: number };\n};\n\nconst initialState: IShoppingCart = {\n    catalogItemIds: [],\n    quantityMap: {},\n};\n\nexport const getShoppingCart = (state: RootState) => state.shoppingCartReducer;\nexport const getShoppingCartCatalogItemIds = createSelector(getShoppingCart, state => state.catalogItemIds);\nexport const getShoppingCartQuantityMap = createSelector(getShoppingCart, state => state.quantityMap);\nexport const getShoppingCartCatalogItems = createSelector(\n    [getShoppingCartCatalogItemIds, getCatalogItems],\n    (catalogItemIds, catalogItems) => catalogItemIds.map(catalogItemId => catalogItems.find(item => item.id === catalogItemId)!)\n);\n\nexport const ShoppingCartActions = {\n    addItem: createAction<number>(\"[ShoppingCart] Add item\"),\n    remove: createAction<number>(\"[ShoppingCart] Remove item\"),\n    updateItemQuantity: createAction<{ id: number; quantity: number }>(\"[ShoppingCart] Update item quantity\"),\n};\n\nconst shoppingCartReducer = createReducer<IShoppingCart>(initialState, builder =>\n    builder\n        .addCase(ShoppingCartActions.addItem, (state, action) => {\n            const { catalogItemIds, quantityMap } = state;\n            if (catalogItemIds.includes(action.payload)) {\n                quantityMap[action.payload] = quantityMap[action.payload] + 1;\n            } else {\n                catalogItemIds.unshift(action.payload);\n                quantityMap[action.payload] = 1;\n            }\n        })\n        .addCase(ShoppingCartActions.remove, (state, action) => {\n            const { catalogItemIds, quantityMap } = state;\n            const index = catalogItemIds.findIndex(catalogItemId => catalogItemId === action.payload);\n            delete catalogItemIds[index];\n            delete quantityMap[action.payload];\n        })\n        .addCase(ShoppingCartActions.updateItemQuantity, (state, action) => {\n            const { id, quantity } = action.payload;\n            state.quantityMap[id] = quantity;\n        })\n);\n\nexport default shoppingCartReducer;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\n\nimport Img from \"components/Img\";\n\nimport { ICatalogItem } from \"reducers/catalogReducer\";\nimport { ShoppingCartActions } from \"reducers/shoppingCartReducer\";\n\nconst useStyles = makeStyles(\n    (theme: Theme) =>\n        createStyles({\n            root: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                position: \"relative\",\n            },\n            clickableArea: {\n                flex: \"1 1 auto\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"flex-start\",\n                alignItems: \"unset\",\n            },\n            title: { ...theme.typography.h5, margin: 0 },\n            actions: {\n                display: \"flex\",\n            },\n            addToCartBtn: {\n                display: \"flex\",\n                flex: \"1 0 auto\",\n                padding: theme.spacing(1),\n            },\n            addToCartBtnIcon: {\n                borderColor: theme.palette.primary.contrastText,\n                borderRadius: 4,\n                borderStyle: \"solid\",\n                borderWidth: 1,\n                padding: 2,\n            },\n            addToCartBtnLabel: {\n                margin: \"0 auto\",\n            },\n        }),\n    { name: \"CatalogItem\" }\n);\n\ntype Props = {\n    item: ICatalogItem;\n};\n\nconst CatalogItem: React.FC<Props> = ({ item }) => {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    function addToCart() {\n        dispatch(ShoppingCartActions.addItem(item.id));\n    }\n\n    return (\n        <Card className={classes.root}>\n            <CardActionArea className={classes.clickableArea}>\n                <CardMedia>\n                    <Img src={item.url} aspectRatio={1} />\n                </CardMedia>\n                <CardContent>\n                    <h3 className={classes.title}>{item.title}</h3>\n                </CardContent>\n            </CardActionArea>\n            <CardActions className={classes.actions}>\n                <Button className={classes.addToCartBtn} variant=\"contained\" color=\"primary\" onClick={addToCart}>\n                    <AddShoppingCartIcon className={classes.addToCartBtnIcon} />\n                    <span className={classes.addToCartBtnLabel}>ADD TO CART</span>\n                </Button>\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default CatalogItem;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\n\nimport {\n    CatalogActions, getCurrentPage, getItemsPerPage, getPageCount, getPaginationText\n} from \"reducers/catalogReducer\";\n\nconst useStyles = makeStyles(\n    (theme: Theme) =>\n        createStyles({\n            root: {\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"flex-end\",\n                padding: theme.spacing(2),\n                [theme.breakpoints.down(\"xs\")]: {\n                    flexDirection: \"column\",\n                },\n            },\n            info: {\n                display: \"flex\",\n                flexDirection: \"row\",\n            },\n            text: {\n                display: \"flex\",\n                alignItems: \"center\",\n            },\n            select: {\n                marginLeft: theme.spacing(1),\n                marginRight: theme.spacing(1),\n            },\n            actions: {\n                display: \"flex\",\n                flexDirection: \"row\",\n                [theme.breakpoints.down(\"xs\")]: {\n                    marginLeft: \"auto\",\n                },\n            },\n        }),\n    { name: \"CatalogPagination\" }\n);\n\ntype Props = {};\n\nconst CatalogPagination: React.FC<Props> = () => {\n    const dispatch = useDispatch();\n    const currentPage = useSelector(getCurrentPage);\n    const itemsPerPage = useSelector(getItemsPerPage);\n    const pageCount = useSelector(getPageCount);\n    const paginationText = useSelector(getPaginationText);\n    const classes = useStyles();\n\n    function setItemsPerPage(event: React.ChangeEvent<{ name?: string; value: unknown }>) {\n        const itemsPerPage = event.target.value as number;\n        if (itemsPerPage > 0) {\n            dispatch(CatalogActions.setItemsPerPage(itemsPerPage));\n            dispatch(CatalogActions.firstPage());\n        }\n    }\n\n    function goToFirstPage() {\n        dispatch(CatalogActions.firstPage());\n    }\n\n    function goToPreviousPage() {\n        dispatch(CatalogActions.previousPage());\n    }\n\n    function goToNextPage() {\n        dispatch(CatalogActions.nextPage());\n    }\n\n    function goToLastPage() {\n        dispatch(CatalogActions.lastPage());\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.info}>\n                <InputLabel className={classes.text} id=\"catalog-pagination-select-label\">\n                    Items per page\n                </InputLabel>\n                <Select\n                    className={classes.select}\n                    native\n                    labelId=\"catalog-pagination-select-label\"\n                    value={itemsPerPage}\n                    onChange={setItemsPerPage}\n                >\n                    <option value={5}>5</option>\n                    <option value={15}>15</option>\n                    <option value={50}>50</option>\n                </Select>\n                <div className={classes.text}>{paginationText}</div>\n            </div>\n            <div className={classes.actions}>\n                <IconButton onClick={goToFirstPage} disabled={currentPage <= 1} aria-label=\"first page\">\n                    <FirstPageIcon />\n                </IconButton>\n                <IconButton onClick={goToPreviousPage} disabled={currentPage <= 1} aria-label=\"previous page\">\n                    <KeyboardArrowLeft />\n                </IconButton>\n                <IconButton onClick={goToNextPage} disabled={currentPage >= pageCount - 1} aria-label=\"next page\">\n                    <KeyboardArrowRight />\n                </IconButton>\n                <IconButton onClick={goToLastPage} disabled={currentPage >= pageCount - 1} aria-label=\"last page\">\n                    <LastPageIcon />\n                </IconButton>\n            </div>\n        </div>\n    );\n};\n\nexport default CatalogPagination;\n","import React from \"react\";\n\nimport Spinner from \"assets/Spinner.svg\";\n\ntype Props = {\n    className?: string;\n};\n\nconst Loader: React.FC<Props> = ({ className }) => <img className={className || \"\"} src={Spinner} alt=\"loading...\" />;\n\nexport default Loader;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport CatalogItem from \"components/CatalogItem\";\nimport CatalogPagination from \"components/CatalogPagination\";\nimport Loader from \"components/Loader\";\n\nimport {\n    CatalogStatus, CatalogThunks, getPaginatedItems, getStatus\n} from \"reducers/catalogReducer\";\n\ntype Props = {\n    catalogUrl: string;\n};\n\nconst useStyles = makeStyles(\n    (theme: Theme) =>\n        createStyles({\n            root: {\n                display: \"flex\",\n                flexDirection: \"column\",\n            },\n            wrapper: {\n                padding: theme.spacing(2),\n                display: \"grid\",\n                gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n                gridGap: theme.spacing(2),\n                [theme.breakpoints.down(\"xs\")]: {\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    \"& > * + *\": {\n                        marginTop: theme.spacing(2),\n                    },\n                },\n            },\n            loader: {\n                margin: \"auto\",\n            },\n        }),\n    { name: \"Catalog\" }\n);\n\nconst Catalog: React.FC<Props> = ({ catalogUrl }) => {\n    const dispatch = useDispatch();\n    const paginatedItems = useSelector(getPaginatedItems);\n    const catalogStatus = useSelector(getStatus);\n    const classes = useStyles();\n\n    useEffect(() => {\n        if (catalogStatus !== CatalogStatus.Loading && catalogStatus !== CatalogStatus.Loaded) {\n            dispatch(CatalogThunks.load(catalogUrl));\n        }\n    }, [dispatch, catalogUrl, catalogStatus]);\n\n    if (catalogStatus !== CatalogStatus.Loaded) {\n        return <Loader className={classes.loader} />;\n    }\n\n    return (\n        <div className={classes.root}>\n            <CatalogPagination />\n            <div className={classes.wrapper}>\n                {paginatedItems.map(item => (\n                    <CatalogItem key={`CatalogItem-${item.id}`} item={item} />\n                ))}\n            </div>\n            <CatalogPagination />\n        </div>\n    );\n};\n\nexport default Catalog;\n","import { useTheme } from \"@material-ui/core/styles\";\nimport { Breakpoint } from \"@material-ui/core/styles/createBreakpoints\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nfunction useWidth() {\n    const theme = useTheme();\n    const keys = [...theme.breakpoints.keys].reverse();\n    return (\n        keys.reduce((output: Breakpoint | null, key: Breakpoint) => {\n            // eslint-disable-next-line react-hooks/rules-of-hooks\n            const matches = useMediaQuery(theme.breakpoints.up(key));\n            return !output && matches ? key : output;\n        }, null) || \"xs\"\n    );\n}\n\nexport default useWidth;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Catalog from \"components/Catalog\";\nimport Layout from \"components/Layout\";\nimport ShoppingCart from \"components/ShoppingCart\";\n\nexport enum Routes {\n    CATALOG = \"/\",\n    CART = \"/cart\",\n}\n\nconst App: React.FC = () => {\n    return (\n        <Layout>\n            <Switch>\n                <Route path={Routes.CART} component={() => <ShoppingCart />} />\n                <Route path={Routes.CATALOG} component={() => <Catalog catalogUrl=\"https://jsonplaceholder.typicode.com/photos\" />} />\n            </Switch>\n        </Layout>\n    );\n};\n\nexport default App;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\n\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\n\nimport { Routes } from \"components/App\";\n\nimport useWidth from \"hooks/useWidth\";\n\nconst useStyles = makeStyles(\n    (theme: Theme) =>\n        createStyles({\n            root: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                height: \"100%\",\n                overflow: \"auto\",\n            },\n            bottomNavigation: {\n                position: \"absolute\",\n                bottom: 0,\n                width: \"100%\",\n            },\n        }),\n    { name: \"Layout\" }\n);\n\ntype Props = {};\n\nconst Layout: React.FC<Props> = ({ children }) => {\n    const width = useWidth();\n    const classes = useStyles();\n    const history = useHistory();\n    const match = useRouteMatch([Routes.CART, Routes.CATALOG]);\n    const [page, setPage] = useState(match ? match.path : Routes.CATALOG);\n\n    useEffect(() => {\n        history.push(page);\n    }, [page, history]);\n\n    function goToPage(_: React.ChangeEvent<{}>, newPage: Routes) {\n        setPage(newPage);\n    }\n\n    return (\n        <main className={classes.root}>\n            {children}\n            {width === \"xs\" && (\n                <BottomNavigation className={classes.bottomNavigation} value={page} onChange={goToPage}>\n                    <BottomNavigationAction value={Routes.CATALOG} icon={<ListIcon />} />\n                    <BottomNavigationAction value={Routes.CART} icon={<ShoppingCartIcon />} />\n                </BottomNavigation>\n            )}\n        </main>\n    );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport Card from \"@material-ui/core/Card\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport Img from \"components/Img\";\n\nimport { ICatalogItem } from \"reducers/catalogReducer\";\nimport { ShoppingCartActions } from \"reducers/shoppingCartReducer\";\n\nconst useStyles = makeStyles(\n    (theme: Theme) =>\n        createStyles({\n            root: {\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"flex-start\",\n                padding: theme.spacing(1),\n            },\n            thumbnail: {\n                borderRadius: \"50%\",\n            },\n            thumbnailWrapper: {\n                minWidth: 48,\n            },\n            title: {\n                display: \"inline-flex\",\n                alignItems: \"center\",\n                paddingLeft: theme.spacing(2),\n                paddingRight: theme.spacing(2),\n                marginRight: \"auto\",\n            },\n        }),\n    { name: \"ShoppingCartItem\" }\n);\n\ntype Props = {\n    item: ICatalogItem;\n    quantity: number;\n};\n\nconst ShoppingCartItem: React.FC<Props> = ({ item, quantity }) => {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    function removeFromCart() {\n        dispatch(ShoppingCartActions.remove(item.id));\n    }\n\n    function updateQuantity(event: React.ChangeEvent<HTMLInputElement>) {\n        dispatch(ShoppingCartActions.updateItemQuantity({ id: item.id, quantity: event.target.valueAsNumber }));\n    }\n\n    return (\n        <Card className={classes.root}>\n            <Img\n                src={item.thumbnailUrl}\n                alt={item.title}\n                aspectRatio={1}\n                isCritical={true}\n                className={classes.thumbnail}\n                wrapperClassName={classes.thumbnailWrapper}\n            />\n            <span className={classes.title}>{item.title}</span>\n            <TextField label=\"Quantity\" name=\"quantity\" type=\"number\" value={quantity} onChange={updateQuantity} inputProps={{ min: 1 }} />\n            <IconButton color=\"primary\" onClick={removeFromCart}>\n                <DeleteIcon />\n            </IconButton>\n        </Card>\n    );\n};\n\nexport default ShoppingCartItem;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport ShoppingCartItem from \"components/ShoppingCartItem\";\n\nimport {\n    getShoppingCartCatalogItems, getShoppingCartQuantityMap\n} from \"reducers/shoppingCartReducer\";\n\nconst useStyles = makeStyles(\n    (theme: Theme) =>\n        createStyles({\n            root: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                padding: theme.spacing(2),\n                width: \"100%\",\n                \"& > * + *\": {\n                    marginTop: theme.spacing(2),\n                },\n            },\n        }),\n    { name: \"ShoppingCart\" }\n);\n\ntype Props = {};\n\nconst ShoppingCart: React.FC<Props> = () => {\n    const shoppingCartItems = useSelector(getShoppingCartCatalogItems);\n    const quantityMap = useSelector(getShoppingCartQuantityMap);\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            {shoppingCartItems.map(item => (\n                <ShoppingCartItem key={`ShoppingCartItem-${item.id}`} item={item} quantity={quantityMap[item.id]} />\n            ))}\n        </div>\n    );\n};\n\nexport default React.memo(ShoppingCart);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport catalogReducer, { ICatalog } from \"./catalogReducer\";\nimport shoppingCartReducer, { IShoppingCart } from \"./shoppingCartReducer\";\n\nexport type RootState = {\n    catalogReducer: ICatalog;\n    shoppingCartReducer: IShoppingCart;\n};\n\nconst rootReducer = combineReducers({\n    catalogReducer,\n    shoppingCartReducer,\n});\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\nimport rootReducer from \"./reducers\";\n\nexport default function configureAppStore(preloadedState?: any) {\n    const store = configureStore({\n        reducer: rootReducer,\n        middleware: [...getDefaultMiddleware()],\n        preloadedState,\n        enhancers: [],\n    });\n\n    if (process.env.NODE_ENV !== \"production\" && \"hot\" in module) {\n        (module as any).hot.accept(\"./reducers\", () => store.replaceReducer(rootReducer));\n    }\n\n    return store;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { deepOrange, teal } from \"@material-ui/core/colors\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport App from \"components/App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport configureStore from \"configureStore\";\n\nimport \"./index.css\";\n\nconst theme = createMuiTheme({\n    palette: {\n        type: \"light\",\n        primary: {\n            main: teal[500],\n        },\n        secondary: {\n            main: deepOrange[500],\n        },\n    },\n});\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <ThemeProvider theme={theme}>\n            <BrowserRouter basename={process.env.NODE_ENV === \"production\" ? \"/docavenue\" : \"\"}>\n                <CssBaseline />\n                <App />\n            </BrowserRouter>\n        </ThemeProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}